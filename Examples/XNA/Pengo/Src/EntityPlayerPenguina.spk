Class EntityPlayerPenguina extends EntityPlayer
{
	Function __Construct(EngineMain $Engine, $EName)
	{
		parent::EntityPlayer::__construct($Engine, $EName);
		$ID = EntityType->$Player; // All players are considered the same entity type
		$ParentID = EntityType->$Player;
		SetTexture(Facing->$Center, XNAPng('./Images/Entities/Penuina/Front.png'));
		SetTexture(Facing->$Left, XNAPng('./Images/Entities/Penuina/Left.png'));
		SetTexture(Facing->$LeftAttack, XNAPng('./Images/Entities/Penuina/LeftAttack.png'));
		SetTexture(Facing->$Right, XNAPng('./Images/Entities/Penuina/Right.png'));
		SetTexture(Facing->$RightAttack, XNAPng('./Images/Entities/Penuina/RightAttack.png'));
		$HitTextures[] = XNAPng('./Images/Entities/Penuina/Hit1.png');
		$HitTextures[] = XNAPng('./Images/Entities/Penuina/Hit2.png');
		$HitTextures[] = XNAPng('./Images/Entities/Penuina/Hit3.png');
		$HitTextures[] = XNAPng('./Images/Entities/Penuina/Hit4.png');
		$HitTextures[] = XNAPng('./Images/Entities/Penuina/Hit5.png');
		$HitTextures[] = XNAPng('./Images/Entities/Penuina/Hit6.png');
		$HitTextures[] = XNAPng('./Images/Entities/Penuina/Hit7.png');
		$HitTextures[] = XNAPng('./Images/Entities/Penuina/Hit8.png');
		$HitFrameMax = Count($HitTextures);
		$KeyControls[ControlType->$MoveUp] = @KeyNumPad8;
		$KeyControls[ControlType->$MoveDown] = @KeyNumPad2;
		$KeyControls[ControlType->$MoveLeft] = @KeyNumPad4;
		$KeyControls[ControlType->$MoveRight] = @KeyNumPad6;
		$KeyControls[ControlType->$Attack] = @KeyNumPad5;
	}
	Function __Destruct()
	{
		Dispose();
	}
	Function Dispose()
	{
		if($Disposed)
			return;
		$Disposed = true;
	}
};